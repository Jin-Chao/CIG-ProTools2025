--------------------------------------------------------------------------------
-- Metadata
--------------------------------------------------------------------------------
Invocation:       /home/uqcjin/bin/valgrind/bin/cu_annotate cacheusage.ll.out.41769
I1 cache:         32768 B, 64 B, 8-way associative
D1 cache:         49152 B, 64 B, 12-way associative
LL cache:         62914560 B, 64 B, 15-way associative
Command:          ./Himeno/bin/bmt.O3 -s M -l 10 -v varinfo.txt
Histogram bins recorded:  Access# Miss# Comp# Conf# Cap# Cacheline# 1-words 2-words 3-words 4-words 5-words 6-words 7-words 8-words 9-words 10-words 11-words 12-words 13-words 14-words 15-words 16-words
Bins shown:     Access# Miss# Comp# Conf# Cap# Cacheline# 1-words 2-words 3-words 4-words 5-words 6-words 7-words 8-words 9-words 10-words 11-words 12-words 13-words 14-words 15-words 16-words
Bin sort order: Access# Miss# Comp# Conf# Cap# Cacheline# 1-words 2-words 3-words 4-words 5-words 6-words 7-words 8-words 9-words 10-words 11-words 12-words 13-words 14-words 15-words 16-words
Threshold:        0.1%
Annotation:       on

--------------------------------------------------------------------------------
-- Summary
--------------------------------------------------------------------------------
Access#_______ Miss#____ Comp#__ Conf#___ Cap#___ Cacheline# 1-words 2-words 3-words 4-words_ 5-words 6-words 7-words 8-words 9-words 10-words 11-words 12-words 13-words 14-words 15-words 16-words 

          6.7% 53,949,975 (100.0%)  (6.8%)  (92.3%)  (0.9%)          14/0  (0.1%)  (0.0%)  (0.0%)  (14.1%)  (0.0%)  (0.0%)  (0.0%)  (0.0%)  (0.0%)  (0.0%)  (0.0%)  (0.0%)  (0.0%)  (5.8%)  (0.6%)  (79.3%)  PROGRAM TOTALS

--------------------------------------------------------------------------------
-- File:function summary
--------------------------------------------------------------------------------
  Access#_______ Miss#____ Comp#__ Conf#___ Cap#___ Cacheline# 1-words 2-words 3-words 4-words_ 5-words 6-words 7-words 8-words 9-words 10-words 11-words 12-words 13-words 14-words 15-words 16-words  file:function

<           6.7% 53,945,310 (100.0%)  (6.8%)  (92.3%)  (0.9%)          14/0  (0.1%)  (0.0%)  (0.0%)  (14.1%)  (0.0%)  (0.0%)  (0.0%)  (0.0%)  (0.0%)  (0.0%)  (0.0%)  (0.0%)  (0.0%)  (5.8%)  (0.6%)  (79.3%)  /scratch/user/uqcjin/App/examples/Himeno/src/../../Himeno/src/himenoBMTxpa.c:
            6.3% 50,275,280  (93.2%)  (0.0%)  (99.1%)  (0.9%)          15/0  (0.1%)  (0.0%)  (0.0%)   (8.2%)  (0.0%)  (0.0%)  (0.0%)  (0.0%)  (0.0%)  (0.0%)  (0.0%)  (0.0%)  (0.0%)  (6.3%)  (0.6%)  (84.8%)    jacobi._omp_fn.0
          100.0%  3,407,877   (6.3%)  (100.0%)   (0.0%)  (0.0%)           1/3  (0.0%)  (0.0%)  (0.0%)  (94.3%)  (0.0%)  (0.0%)  (0.0%)  (0.0%)  (0.0%)  (0.0%)  (0.0%)  (0.0%)  (0.0%)  (0.0%)  (0.4%)   (5.3%)    mat_set


--------------------------------------------------------------------------------
-- Function:file summary
--------------------------------------------------------------------------------
  Access#_______ Miss#___ Comp#__ Conf#___ Cap#___ Cacheline# 1-words 2-words 3-words 4-words 5-words 6-words 7-words 8-words 9-words 10-words 11-words 12-words 13-words 14-words 15-words 16-words  function:file

>           6.3% 50,275,280 (93.2%)  (0.0%)  (99.1%)  (0.9%)          15/0  (0.1%)  (0.0%)  (0.0%)  (8.2%)  (0.0%)  (0.0%)  (0.0%)  (0.0%)  (0.0%)  (0.0%)  (0.0%)  (0.0%)  (0.0%)  (6.3%)  (0.6%)  (84.8%)  jacobi._omp_fn.0:/scratch/user/uqcjin/App/examples/Himeno/src/../../Himeno/src/himenoBMTxpa.c


>         100.0%  3,407,877  (6.3%)  (100.0%)   (0.0%)  (0.0%)           1/3  (0.0%)  (0.0%)  (0.0%)  (94.3%)  (0.0%)  (0.0%)  (0.0%)  (0.0%)  (0.0%)  (0.0%)  (0.0%)  (0.0%)  (0.0%)  (0.0%)  (0.4%)   (5.3%)  mat_set:/scratch/user/uqcjin/App/examples/Himeno/src/../../Himeno/src/himenoBMTxpa.c


--------------------------------------------------------------------------------
-- Annotated source file: /scratch/user/uqcjin/App/examples/Himeno/src/../../Himeno/src/himenoBMTxpa.c
--------------------------------------------------------------------------------
Access#_______ Miss#___ Comp#___ Conf#____ Cap#___ Cacheline# 1-words 2-words 3-words 4-words_ 5-words 6-words 7-words 8-words 9-words 10-words 11-words 12-words 13-words 14-words 15-words 16-words 

-- line 186 ----------------------------------------
             .         .                                                .                                                                                                                                  
             .         .                                                .                                                                                                                                   mat_set_init(&p);
             .         .                                                .                                                                                                                                   mat_set(&bnd,0,1.0);
             .         .                                                .                                                                                                                                   mat_set(&wrk1,0,0.0);
             .         .                                                .                                                                                                                                   mat_set(&wrk2,0,0.0);
             .         .                                                .                                                                                                                                   mat_set(&a,0,1.0);
             .         .                                                .                                                                                                                                   mat_set(&a,1,1.0);
             .         .                                                .                                                                                                                                   mat_set(&a,2,1.0);
        100.0%         1  (0.0%)   (0.0%)  (100.0%)  (0.0%)           1/1  (100.0%)  (0.0%)  (0.0%)   (0.0%)  (0.0%) (0.0%)  (0.0%) (0.0%) (0.0%)  (0.0%)  (0.0%)  (0.0%)  (0.0%)  (0.0%)  (0.0%)   (0.0%)    mat_set(&a,3,1.0/6.0);
             .         .                                                .                                                                                                                                   mat_set(&b,0,0.0);
             .         .                                                .                                                                                                                                   mat_set(&b,1,0.0);
             .         .                                                .                                                                                                                                   mat_set(&b,2,0.0);
             .         .                                                .                                                                                                                                   mat_set(&c,0,1.0);
             .         .                                                .                                                                                                                                   mat_set(&c,1,1.0);
             .         .                                                .                                                                                                                                   mat_set(&c,2,1.0);
             .         .                                                .                                                                                                                                 
             .         .                                                .                                                                                                                                   omp_set_num_threads(num_threads);
-- line 202 ----------------------------------------
-- line 203 ----------------------------------------
             .         .                                                .                                                                                                                                 
             .         .                                                .                                                                                                                                   /*
             .         .                                                .                                                                                                                                    *    Start measuring
             .         .                                                .                                                                                                                                    */
             .         .                                                .                                                                                                                                   nn= 3;
             .         .                                                .                                                                                                                                   printf(" Start rehearsal measurement process.\n");
             .         .                                                .                                                                                                                                   printf(" Measure the performance in %d times.\n\n",nn);
             .         .                                                .                                                                                                                                 
        100.0%         1  (0.0%)   (0.0%)  (100.0%)  (0.0%)           1/2  (0.0%)  (100.0%)  (0.0%)   (0.0%)  (0.0%) (0.0%)  (0.0%) (0.0%) (0.0%)  (0.0%)  (0.0%)  (0.0%)  (0.0%)  (0.0%)  (0.0%)   (0.0%)    cpu0= second();
        100.0%         1  (0.0%)   (0.0%)  (100.0%)  (0.0%)           1/1  (100.0%)  (0.0%)  (0.0%)   (0.0%)  (0.0%) (0.0%)  (0.0%) (0.0%) (0.0%)  (0.0%)  (0.0%)  (0.0%)  (0.0%)  (0.0%)  (0.0%)   (0.0%)    gosa= jacobi(nn,&a,&b,&c,&p,&bnd,&wrk1,&wrk2);
             .         .                                                .                                                                                                                                   cpu1= second();
             .         .                                                .                                                                                                                                   cpu= cpu1 - cpu0;
             .         .                                                .                                                                                                                                   flop = (double)(kmax-1)*(double)(jmax-1)*(double)(imax-1)*34.0;
             .         .                                                .                                                                                                                                 
             .         .                                                .                                                                                                                                   if(cpu != 0.0)
             .         .                                                .                                                                                                                                     xmflops2= flop/cpu*1.e-6*nn;
             .         .                                                .                                                                                                                                 
             .         .                                                .                                                                                                                                   printf(" MFLOPS: %f time(s): %f %e\n\n",xmflops2,cpu,gosa);
-- line 220 ----------------------------------------
-- line 266 ----------------------------------------
             .         .                                                .                                                                                                                                     return true;
             .         .                                                .                                                                                                                                   }
             .         .                                                .                                                                                                                                   if(!strcmp(size,"S") || !strcmp(size,"s")){
             .         .                                                .                                                                                                                                     is[0]= 64;
             .         .                                                .                                                                                                                                     is[1]= 64;
             .         .                                                .                                                                                                                                     is[2]= 128;
             .         .                                                .                                                                                                                                     return true;
             .         .                                                .                                                                                                                                   }
        100.0%         1  (0.0%)  (100.0%)    (0.0%)  (0.0%)           1/2  (0.0%)  (100.0%)  (0.0%)   (0.0%)  (0.0%) (0.0%)  (0.0%) (0.0%) (0.0%)  (0.0%)  (0.0%)  (0.0%)  (0.0%)  (0.0%)  (0.0%)   (0.0%)    if(!strcmp(size,"M") || !strcmp(size,"m")){
             .         .                                                .                                                                                                                                     is[0]= 128;
             .         .                                                .                                                                                                                                     is[1]= 128;
             .         .                                                .                                                                                                                                     is[2]= 256;
             .         .                                                .                                                                                                                                     return true;
             .         .                                                .                                                                                                                                   }
             .         .                                                .                                                                                                                                   if(!strcmp(size,"L") || !strcmp(size,"l")){
             .         .                                                .                                                                                                                                     is[0]= 256;
             .         .                                                .                                                                                                                                     is[1]= 256;
-- line 282 ----------------------------------------
-- line 290 ----------------------------------------
             .         .                                                .                                                                                                                                     return true;
             .         .                                                .                                                                                                                                   }
             .         .                                                .                                                                                                                                   return false;
             .         .                                                .                                                                                                                                 }
             .         .                                                .                                                                                                                                 
             .         .                                                .                                                                                                                                 int
             .         .                                                .                                                                                                                                 newMat(Matrix* Mat, int mnums,int mrows, int mcols, int mdeps)
             .         .                                                .                                                                                                                                 {
         66.7%         2  (0.0%)  (100.0%)    (0.0%)  (0.0%)           1/3  (50.0%)  (0.0%)  (0.0%)   (0.0%)  (50.0%) (0.0%)  (0.0%) (0.0%) (0.0%)  (0.0%)  (0.0%)  (0.0%)  (0.0%)  (0.0%)  (0.0%)   (0.0%)    Mat->mnums= mnums;
             .         .                                                .                                                                                                                                   Mat->mrows= mrows;
        100.0%         1  (0.0%)  (100.0%)    (0.0%)  (0.0%)           1/1  (100.0%)  (0.0%)  (0.0%)   (0.0%)  (0.0%) (0.0%)  (0.0%) (0.0%) (0.0%)  (0.0%)  (0.0%)  (0.0%)  (0.0%)  (0.0%)  (0.0%)   (0.0%)    Mat->mcols= mcols;
             .         .                                                .                                                                                                                                   Mat->mdeps= mdeps;
             .         .                                                .                                                                                                                                   Mat->m= NULL;
             .         .                                                .                                                                                                                                   Mat->m= (float*) 
             .         .                                                .                                                                                                                                     malloc(mnums * mrows * mcols * mdeps * sizeof(float));
             .         .                                                .                                                                                                                                   
             .         .                                                .                                                                                                                                   return(Mat->m != NULL) ? 1:0;
             .         .                                                .                                                                                                                                 }
             .         .                                                .                                                                                                                                 
-- line 308 ----------------------------------------
-- line 318 ----------------------------------------
             .         .                                                .                                                                                                                                   Mat->mdeps= 0;
             .         .                                                .                                                                                                                                 }
             .         .                                                .                                                                                                                                 
             .         .                                                .                                                                                                                                 void
             .         .                                                .                                                                                                                                 mat_set(Matrix* Mat, int l, float val)
             .         .                                                .                                                                                                                                 {
             .         .                                                .                                                                                                                                   int i,j,k;
             .         .                                                .                                                                                                                                 
          0.1%         2  (0.0%)   (0.0%)  (200.0%)  (0.0%)       1,677/2  (0.0%)  (100.0%)  (0.0%)   (0.0%)  (0.0%) (0.0%)  (0.0%) (0.0%) (0.0%)  (0.0%)  (0.0%)  (0.0%)  (0.0%)  (0.0%)  (0.0%)   (0.0%)      for(i=0; i<Mat->mrows; i++)
             .         .                                                .                                                                                                                                       for(j=0; j<Mat->mcols; j++)
             .         .                                                .                                                                                                                                         for(k=0; k<Mat->mdeps; k++)
        100.0% 3,407,875  (6.3%)  (100.0%)    (0.0%)  (0.0%)           1/3  (0.0%)  (0.0%)  (0.0%)  (94.3%)  (0.0%) (0.0%)  (0.0%) (0.0%) (0.0%)  (0.0%)  (0.0%)  (0.0%)  (0.0%)  (0.0%)  (0.4%)   (5.3%)            MR(Mat,l,i,j,k)= val;
             .         .                                                .                                                                                                                                 }
             .         .                                                .                                                                                                                                 
             .         .                                                .                                                                                                                                 void
             .         .                                                .                                                                                                                                 mat_set_init(Matrix* Mat)
             .         .                                                .                                                                                                                                 {
             .         .                                                .                                                                                                                                   int  i,j,k,l;
             .         .                                                .                                                                                                                                   float tt;
             .         .                                                .                                                                                                                                 
             .         .                                                .                                                                                                                                   for(i=0; i<Mat->mrows; i++)
             .         .                                                .                                                                                                                                     for(j=0; j<Mat->mcols; j++)
             .         .                                                .                                                                                                                                       for(k=0; k<Mat->mdeps; k++)
        100.0%   262,144  (0.5%)  (100.0%)    (0.0%)  (0.0%)           1/4  (0.0%)  (0.0%)  (0.0%)  (100.0%)  (0.0%) (0.0%)  (0.0%) (0.0%) (0.0%)  (0.0%)  (0.0%)  (0.0%)  (0.0%)  (0.0%)  (0.0%)   (0.0%)          MR(Mat,0,i,j,k)= (float)(i*i)
             .         .                                                .                                                                                                                                           /(float)((Mat->mrows - 1)*(Mat->mrows - 1));
             .         .                                                .                                                                                                                                 }
             .         .                                                .                                                                                                                                 
             .         .                                                .                                                                                                                                 float
             .         .                                                .                                                                                                                                 jacobi(int nn, Matrix* a,Matrix* b,Matrix* c,
             .         .                                                .                                                                                                                                        Matrix* p,Matrix* bnd,Matrix* wrk1,Matrix* wrk2)
             .         .                                                .                                                                                                                                 {
             .         .                                                .                                                                                                                                   int    i,j,k,n,imax,jmax,kmax;
             .         .                                                .                                                                                                                                   float  gosa,gosa1,s0,ss;
             .         .                                                .                                                                                                                                 
             .         .                                                .                                                                                                                                   imax= p->mrows-1;
             .         .                                                .                                                                                                                                   jmax= p->mcols-1;
             .         .                                                .                                                                                                                                   kmax= p->mdeps-1;
         50.0%         2  (0.0%)   (0.0%)  (200.0%)  (0.0%)           4/2  (0.0%)  (100.0%)  (0.0%)   (0.0%)  (0.0%) (0.0%)  (0.0%) (0.0%) (0.0%)  (0.0%)  (0.0%)  (0.0%)  (0.0%)  (0.0%)  (0.0%)   (0.0%)  #pragma omp parallel shared(a,p,b,c,bnd,wrk1,wrk2,nn,imax,jmax,kmax,omega,gosa) private(i,j,k,s0,ss,gosa1,n)
             .         .                                                .                                                                                                                                 {
             .         .                                                .                                                                                                                                   for(n=0 ; n<nn ; n++){
             .         .                                                .                                                                                                                                 #pragma omp barrier
             .         .                                                .                                                                                                                                 #pragma omp master
             .         .                                                .                                                                                                                                     {
             .         .                                                .                                                                                                                                       gosa = 0.0;
             .         .                                                .                                                                                                                                     }
             .         .                                                .                                                                                                                                     gosa1= 0.0;
             .         .                                                .                                                                                                                                 #pragma omp for nowait
             .         .                                                .                                                                                                                                     for(i=1 ; i<imax; i++)
             .         .                                                .                                                                                                                                       for(j=1 ; j<jmax ; j++)
             .         .                                                .                                                                                                                                         for(k=1 ; k<kmax ; k++){
          4.3% 6,608,946 (12.3%)   (0.0%)  (100.0%)  (0.0%)          23/0  (0.0%)  (0.0%)  (0.0%)   (0.0%)  (0.0%) (0.0%)  (0.0%) (0.0%) (0.0%)  (0.0%)  (0.1%)  (0.0%)  (0.0%)  (8.1%)  (0.0%)  (91.8%)            s0= MR(a,0,i,j,k)*MR(p,0,i+1,j,  k)
          6.3% 3,303,847  (6.1%)   (0.0%)  (100.0%)  (0.0%)          15/0  (0.0%)  (0.0%)  (0.0%)   (0.0%)  (0.0%) (0.0%)  (0.0%) (0.0%) (0.0%)  (0.0%)  (0.0%)  (0.0%)  (0.0%)  (8.1%)  (0.0%)  (91.8%)              + MR(a,1,i,j,k)*MR(p,0,i,  j+1,k)
          6.3% 3,303,861  (6.1%)   (0.0%)  (100.0%)  (0.0%)          15/0  (0.0%)  (0.0%)  (0.0%)   (0.0%)  (0.0%) (0.0%)  (0.0%) (0.0%) (0.0%)  (0.0%)  (0.0%)  (0.0%)  (0.0%)  (8.1%)  (0.0%)  (91.8%)              + MR(a,2,i,j,k)*MR(p,0,i,  j,  k+1)
             .         .                                                .                                                                                                                                             + MR(b,0,i,j,k)
         10.5% 5,870,875 (10.9%)   (0.0%)  (100.1%)  (0.0%)           9/0  (0.8%)  (0.0%)  (0.0%)   (0.0%)  (0.0%) (0.0%)  (0.0%) (0.0%) (0.0%)  (0.0%)  (0.0%)  (0.0%)  (0.0%)  (3.6%)  (3.7%)  (91.9%)               *( MR(p,0,i+1,j+1,k) - MR(p,0,i+1,j-1,k)
          0.8%    26,416  (0.0%)   (0.0%)  (100.0%)  (0.0%)         126/0  (1.5%)  (0.0%)  (0.0%)   (0.0%)  (0.0%) (0.0%)  (0.0%) (0.0%) (0.0%)  (0.0%)  (0.0%)  (0.0%)  (6.2%)  (0.0%)  (92.3%)   (0.0%)                - MR(p,0,i-1,j+1,k) + MR(p,0,i-1,j-1,k) )
             .         .                                                .                                                                                                                                             + MR(b,1,i,j,k)
          6.0% 3,326,613  (6.2%)   (0.0%)   (99.6%)  (0.6%)          16/0  (0.0%)  (0.0%)  (0.0%)   (0.0%)  (0.0%) (0.0%)  (0.0%) (0.0%) (0.0%)  (0.0%)  (0.0%)  (0.0%)  (0.0%)  (6.2%)  (0.0%)  (93.7%)               *( MR(p,0,i,j+1,k+1) - MR(p,0,i,j-1,k+1)
             .         .                                                .                                                                                                                                               - MR(p,0,i,j+1,k-1) + MR(p,0,i,j-1,k-1) )
             .         .                                                .                                                                                                                                             + MR(b,2,i,j,k)
          3.4% 3,322,864  (6.2%)   (0.0%)  (100.0%)  (0.0%)          29/0  (0.0%)  (0.0%)  (0.0%)   (0.0%)  (0.0%) (0.0%)  (0.0%) (0.0%) (0.0%)  (0.0%)  (0.0%)  (0.0%)  (0.0%)  (8.0%)  (0.0%)  (91.9%)               *( MR(p,0,i+1,j,k+1) - MR(p,0,i-1,j,k+1)
             .         .                                                .                                                                                                                                               - MR(p,0,i+1,j,k-1) + MR(p,0,i-1,j,k-1) )
          6.2% 3,239,463  (6.0%)   (0.0%)  (100.0%)  (0.0%)          16/0  (0.0%)  (0.0%)  (0.0%)   (0.0%)  (0.0%) (0.0%)  (0.0%) (0.0%) (0.0%)  (0.0%)  (0.0%)  (0.0%)  (0.0%)  (6.2%)  (0.0%)  (93.7%)              + MR(c,0,i,j,k) * MR(p,0,i-1,j,  k)
          6.2% 3,239,399  (6.0%)   (0.0%)  (100.1%)  (0.0%)          16/0  (0.0%)  (0.0%)  (0.0%)   (0.0%)  (0.0%) (0.0%)  (0.0%) (0.0%) (0.0%)  (0.0%)  (0.0%)  (0.0%)  (0.0%)  (6.2%)  (0.0%)  (93.7%)              + MR(c,1,i,j,k) * MR(p,0,i,  j-1,k)
          6.2% 3,239,335  (6.0%)   (0.0%)  (100.1%)  (0.0%)          16/0  (0.0%)  (0.0%)  (0.0%)   (0.0%)  (0.0%) (0.0%)  (0.0%) (0.0%) (0.0%)  (0.0%)  (0.0%)  (0.0%)  (0.0%)  (6.2%)  (0.0%)  (93.7%)              + MR(c,2,i,j,k) * MR(p,0,i,  j,  k-1)
             .         .                                                .                                                                                                                                             + MR(wrk1,0,i,j,k);
             .         .                                                .                                                                                                                                 
          6.1% 6,607,693 (12.2%)   (0.0%)  (100.0%)  (0.0%)          16/0  (0.0%)  (0.0%)  (0.0%)   (0.0%)  (0.0%) (0.0%)  (0.0%) (0.0%) (0.0%)  (0.0%)  (0.0%)  (0.0%)  (0.0%)  (8.1%)  (0.0%)  (91.8%)            ss= (s0*MR(a,3,i,j,k) - MR(p,0,i,j,k))*MR(bnd,0,i,j,k);
             .         .                                                .                                                                                                                                 
             .         .                                                .                                                                                                                                           gosa1+= ss*ss;
             .         .                                                .                                                                                                                                 
          6.1% 3,255,053  (6.0%)   (0.0%)   (86.4%)  (13.6%)          16/0  (0.0%)  (0.0%)  (0.0%)   (0.0%)  (0.0%) (0.0%)  (0.0%) (0.0%) (0.0%)  (0.0%)  (0.0%)  (0.0%)  (0.0%)  (8.1%)  (0.0%)  (91.8%)            MR(wrk2,0,i,j,k)= MR(p,0,i,j,k) + omega*ss;
             .         .                                                .                                                                                                                                         }
             .         .                                                .                                                                                                                                 #pragma omp barrier
             .         .                                                .                                                                                                                                 #pragma omp for nowait
             .         .                                                .                                                                                                                                     for(i=1 ; i<imax ; i++)
          0.8%        13  (0.0%)   (0.0%)    (0.0%)  (108.3%)         136/1  (100.0%)  (0.0%)  (0.0%)   (0.0%)  (0.0%) (0.0%)  (0.0%) (0.0%) (0.0%)  (0.0%)  (0.0%)  (0.0%)  (0.0%)  (0.0%)  (0.0%)   (0.0%)        for(j=1 ; j<jmax ; j++)
             .         .                                                .                                                                                                                                         for(k=1 ; k<kmax ; k++)
         74.6% 4,930,887  (9.1%)   (0.0%)   (99.7%)  (0.0%)           1/3  (0.0%)  (0.0%)  (0.0%)  (83.4%)  (0.0%) (0.0%)  (0.0%) (0.0%) (0.0%)  (0.0%)  (0.0%)  (0.0%)  (0.0%)  (0.0%)  (1.0%)  (15.6%)            MR(p,0,i,j,k)= MR(wrk2,0,i,j,k);
             .         .                                                .                                                                                                                                 
             .         .                                                .                                                                                                                                 #pragma omp critical
             .         .                                                .                                                                                                                                     {
        100.0%        13  (0.0%)   (0.0%)  (108.3%)  (0.0%)           1/1  (100.0%)  (0.0%)  (0.0%)   (0.0%)  (0.0%) (0.0%)  (0.0%) (0.0%) (0.0%)  (0.0%)  (0.0%)  (0.0%)  (0.0%)  (0.0%)  (0.0%)   (0.0%)        gosa+= gosa1;
             .         .                                                .                                                                                                                                     }
             .         .                                                .                                                                                                                                   } /* end n loop */
             .         .                                                .                                                                                                                                 }
             .         .                                                .                                                                                                                                   return(gosa);
             .         .                                                .                                                                                                                                 }
             .         .                                                .                                                                                                                                 
             .         .                                                .                                                                                                                                 double
             .         .                                                .                                                                                                                                 second()
-- line 408 ----------------------------------------
-- line 417 ----------------------------------------
             .         .                                                .                                                                                                                                   
             .         .                                                .                                                                                                                                   if(base_sec == 0 && base_usec == 0)
             .         .                                                .                                                                                                                                     {
             .         .                                                .                                                                                                                                       base_sec = tm.tv_sec;
             .         .                                                .                                                                                                                                       base_usec = tm.tv_usec;
             .         .                                                .                                                                                                                                       t = 0.0;
             .         .                                                .                                                                                                                                   } else {
             .         .                                                .                                                                                                                                     t = (double) (tm.tv_sec-base_sec) + 
        100.0%         2  (0.0%)   (0.0%)  (200.0%)  (0.0%)           2/2  (0.0%)  (100.0%)  (0.0%)   (0.0%)  (0.0%) (0.0%)  (0.0%) (0.0%) (0.0%)  (0.0%)  (0.0%)  (0.0%)  (0.0%)  (0.0%)  (0.0%)   (0.0%)        ((double) (tm.tv_usec-base_usec))/1.0e6 ;
             .         .                                                .                                                                                                                                   }
             .         .                                                .                                                                                                                                 
             .         .                                                .                                                                                                                                   return t ;
             .         .                                                .                                                                                                                                 }
             .         .                                                .                                                                                                                                 

--------------------------------------------------------------------------------
-- Annotation summary
--------------------------------------------------------------------------------
Access#_______ Miss#____ Comp#__ Conf#___ Cap#___ Cacheline# 1-words 2-words 3-words 4-words_ 5-words 6-words 7-words 8-words 9-words 10-words 11-words 12-words 13-words 14-words 15-words 16-words 

          6.7% 53,945,310 (100.0%)  (6.8%)  (92.3%)  (0.9%)          14/0  (0.1%)  (0.0%)  (0.0%)  (14.1%)  (0.0%)  (0.0%)  (0.0%)  (0.0%)  (0.0%)  (0.0%)  (0.0%)  (0.0%)  (0.0%)  (5.8%)  (0.6%)  (79.3%)    annotated: files known & above threshold & readable, line numbers known
             0          0   (0.0%)  (0.0%)   (0.0%)  (0.0%)             0  (0.0%)  (0.0%)  (0.0%)   (0.0%)  (0.0%)  (0.0%)  (0.0%)  (0.0%)  (0.0%)  (0.0%)  (0.0%)  (0.0%)  (0.0%)  (0.0%)  (0.0%)   (0.0%)    annotated: files known & above threshold & readable, line numbers unknown
             0          0   (0.0%)  (0.0%)   (0.0%)  (0.0%)             0  (0.0%)  (0.0%)  (0.0%)   (0.0%)  (0.0%)  (0.0%)  (0.0%)  (0.0%)  (0.0%)  (0.0%)  (0.0%)  (0.0%)  (0.0%)  (0.0%)  (0.0%)   (0.0%)  unannotated: files known & above threshold & two or more non-identical
             0          0   (0.0%)  (0.0%)   (0.0%)  (0.0%)             0  (0.0%)  (0.0%)  (0.0%)   (0.0%)  (0.0%)  (0.0%)  (0.0%)  (0.0%)  (0.0%)  (0.0%)  (0.0%)  (0.0%)  (0.0%)  (0.0%)  (0.0%)   (0.0%)  unannotated: files known & above threshold & unreadable 
         86.9%      3,421   (0.0%)  (89.8%)  (13.6%)  (0.0%)           1/2  (28.7%)  (43.9%)  (6.2%)  (14.5%)  (1.7%)  (1.7%)  (0.7%)  (1.0%)  (0.5%)  (0.2%)  (0.1%)  (0.3%)  (0.1%)  (0.2%)  (0.1%)   (0.0%)  unannotated: files known & below threshold
         69.1%      1,244   (0.0%)  (85.7%)  (22.5%)  (0.0%)           1/1  (49.3%)  (45.0%)  (1.2%)   (2.6%)  (0.5%)  (0.5%)  (0.2%)  (0.3%)  (0.1%)  (0.1%)  (0.0%)  (0.1%)  (0.0%)  (0.1%)  (0.0%)   (0.0%)  unannotated: files unknown

